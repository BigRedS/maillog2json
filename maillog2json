#! /usr/bin/perl

use strict;
use JSON;

use Data::Dumper;

my $maillog = shift;


my $log_data = qmail_parse_log($maillog);

my $json = encode_json($log_data);

print $json;


sub qmail_parse_log{
	my $params = @_;

	my $log_data;
	my %delivery_to_message;
	my %message_to_delivery;
	my %messages;

	open(my $fh, "<", $maillog) or die "Failed to open mail log '$maillog' for reading :$!";
	while(my $line = readline($fh)){
		chomp($line);
		if($line =~ m/qmail: (\d+).\d+ new msg (\d+)$/){
			$messages{$2}->{timestamp_start} = $1;
			$messages{$2}->{message_id} = $2;
		}elsif($line =~ m/qmail: \d+.\d+ info msg (\d+): bytes (\d+) from <([^\>]+> qp \d+ uid (\d+))$/){
			$messages{$1}->{size} = $2;
			$messages{$1}->{from} = $3;
			$messages{$1}->{uid} = $4;
		}elsif($line =~ m/qmail: (\d+).\d+ starting delivery (\d+): msg (\d+) to (\S+) (\S+)$/){
			# delivery_to_message{delivery_id} = $message_id
			$delivery_to_message{$2} = $3;
			# $messages_to_delivery{message_id} = (delivery_id_1, delivery_id_2, etc.)
			push(@{$message_to_delivery{$3}}, $2);
			$messages{$3}->{deliveries}->{$2}->{delivery_id} = $1;
			$messages{$3}->{deliveries}->{$2}->{timestamp_delivery} = $1;
			$messages{$3}->{deliveries}->{$2}->{remote_or_local} = $4;
			$messages{$3}->{deliveries}->{$2}->{to} = $5;
		}elsif($line =~ m/qmail: (\d+).\d+ delivery (\d+): (\S+): (.+)$/){
			my $message_id = $delivery_to_message{$2};
			$messages{$message_id}->{deliveries}->{$2}->{smtp_status} = $3;
			$messages{$message_id}->{deliveries}->{$2}->{smtp_status_message} = $4;
		}elsif($line =~ m/qmail: (\d+).\d+ end msg (\d+)$/){
			$messages{$2}->{timestamp_end} = $1;
			foreach my $delivery_id (keys(%message_to_delivery)){
				delete($delivery_to_message{$delivery_id});
			}
			delete($message_to_delivery{$2});
		}
	}

	foreach my $message_id (sort(keys(%messages))){
		my %message = %{$messages{$message_id}};
		foreach my $delivery_id (sort(keys(%{$message{deliveries}}))){
			my %delivery = %{$messages{$message_id}->{deliveries}->{$delivery_id}};
			my $id = $message_id."_".$delivery_id;
			
			my %log_line = ( %message, %delivery );
			$log_line{_id} = $id;
			delete($log_line{deliveries});
			push(@{$log_data}, \%log_line);
		}
	}
	return ($log_data);
}

