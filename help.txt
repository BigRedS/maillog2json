umg - the Univeral Mail Log Grepper

parses various forms of mail log into a standard structure, which can then
be filtered and output either as JSON or something human-readable

USAGE:

   umg [options] <logfile>
   cat /var/log/maillog | umg [options]

   cat qmail_log | tai64nfraction | umg [options]

OPTIONS:

  FILTERING AND OUTPUT
    
    --and, -a
         By default, a message is declared a match if a single argument to --pattern
         matches. Call this to require each message match *every* pattern.

    --fields <field1,field2,field3...>, -f <field1,field2,field3...>
         Which fields to display as a comma-separated string. Default: to,from,subject. 
         set this to '_ALL_' to get all of them.

    --json
         Produce a (pretty-printed) JSON structure, rather than a human readable list

    --pattern <field_name>:<string>, -p <field_name>:<string>
          Specifies a pattern to use when filtering, if the field named <field_name>
          contains <string> case-insensitively, it will be declared a match. 
          Specify multiple times to use several matches.

  
  LOGFILE PARSING AND INPUT

   Either cat the file on stdin or supply it as an argument. For Qmail logfiles using 
   the tai64n timestamp, pipe them through tai64nfraction first.

    --log-type <type>, -t <type>
         override logfile type detection, 'type' may be one of 'qmail' or 
         'postfix' currently

    --date-format <format>; --num-date-elements <num>
         Specify a date format for figuring out the timestamp of log lines 
         containing human-friendly dates. <format> should be a pattern suitable
         for passing to strptime(), and <num> should be the number of leading 
         whitespace-separated elements of the log line to take as the date 
         string. Defaults:
           date-format: %b %d %T
           num-date-elements: 3


DATA STRUCTURE:

Internally, a hash is created representing each message, some of the keys used
are universal (in that both supported MTAs log them) others are specific to one
or the other. The 'id' field is based on the MTA's own internal ID, but no 
guarantee is made that it will be usefully-so.

Common:
* from:                Envelope 'from' address
* id:                  A unique ID for the message within the output
* remote_hostname:     DNS name of host making inbound connection
* remote_host:         IP address of host making inbound connection
* remote_or_local:     Whether the recipient is local or remote
* size:                Size of the message, in bytes
* smtp_status:         SMTP mail-sending status
* smtp_status_message: Message returned by the remote host on mail-sending
* timestamp_start:     Timestamp from the first log-line mentioning the message
* timestamp_end:       Timestamp from any 'delivered' or 'finished' log-line
* to:                  Recipient address of the emai

Qmail-only:
* delivery_id:         Qmail's delivery ID (prone to re-use)
* message_id:          Qmail's message ID (prone to re-use)
* timestamp_delivery:  Timestamp from the 'delivered' log-line. Qmail only.
* uid:                 UID of the proces submitting the message; qmail-only

Postfix-only:
* auth_username:       SASL username (Postfix/SASL only)
* message_id           Postfix's message ID
* relay:               Postfix's relay name
* subject:             Where logged, parsed out of cleanup's warnings


EXAMPLES

    get a quick count of mail-delivery status for a particular domain:
  
cat /var/log/syslog | ./umg --fields smtp_status --pattern auth_username:@domain.com | sort | uniq -c

    See who's been sending all that spam:

cat /var/log/maillog | ./umg --f auth_username -p subject:viagra -p subject:cialis | sort | uniq




